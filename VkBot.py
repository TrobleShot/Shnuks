import random
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
import datetime #–≤—Ä–µ–º—è
import threading #–ø–æ—Ç–æ–∫–∏
import time
import pymysql #–±–¥
from pymysql.cursors import DictCursor
import wikipedia #–≤–∏–∫–∏–ø–µ–¥–∏—è
import pyowm
import math #–æ–∫—Ä—É–≥–ª–∏—Ç—å —á–∏—Å–ª–æ
from translate import Translator #–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ 


class Mail:
	def __init__(self, hours: int, minutes: int, message: str):
		self.hours = hours
		self.minutes = minutes
		self.message = message
		self.send = True

#--------------------------------------------------------------------------------

mails = [Mail(8, 10, "–ù–∞—á–∞–ª–æ –ø–µ—Ä–≤–æ–π –ø–∞—Ä—ã —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!"), #–ß–∞—Å—ã\–ú–∏–Ω—É—Ç—ã\–¢–µ–∫—Å—Ç
		 Mail(8, 15, "–ü–µ—Ä–≤–∞—è –ø–∞—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!"),
		 Mail(9, 20, "–ù–∞—á–∞–ª–æ –≤—Ç–æ—Ä–æ–π –ø–∞—Ä—ã —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!"),
	 	 Mail(9, 25, "–í—Ç–æ—Ä–∞—è –ø–∞—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!"),
		 Mail(10, 30, "–ù–∞—á–∞–ª–æ —Ç—Ä–µ—Ç—å–µ–π –ø–∞—Ä—ã —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!"),
		 Mail(10, 35, "–¢—Ä–µ—Ç—å—è –ø–∞—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!")]

token = "663f6be35f8b95159a155b8534c52b28c2a6a1b6252b3f526c4b03788f73e6d1cc66d65fa978eddbea104"

connection = pymysql.connect(host='db4free.net',
						  	 user='vkrsbot',
						  	 password='89181449101',
						  	 db='vkrsbot',
						  	 charset='utf8mb4',
						  	 cursorclass=DictCursor)

keyboard = '''
{
   "one_time": false,
   "buttons": [
      [
         {
            "action": {
               "type": "text",
               "label": "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"
            },
            "color": "positive"
         },
         {
            "action": {
               "type":"text",
               "label":"–û—Ç–ø–∏—Å–∞—Ç—å—Å—è"
            },
            "color": "negative"
         },
		 {
            "action": {
               "type":"text",
               "label":"–ö–æ–º–∞–Ω–¥—ã"
            },
            "color": "primary"
		}
		 
      ]
   ]
}
'''

#--------------------------------------------------------------------------------

class Bot:
	def __init__(self):
		try:
			print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥...")
			print("–ü–æ–¥–∫–ª—é—á–∏–ª—Å—è!")
			print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Users, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...")
			with connection.cursor() as cursor:
				cursor.execute("CREATE TABLE IF NOT EXISTS Users (user_id INT PRIMARY KEY);")
			print("–°–æ–∑–¥–∞–ª!")

			self.vk = vk_api.VkApi(token=token)
			self.longpoll = VkLongPoll(self.vk)

			print("–°–æ–∑–¥–∞—é –ø–æ—Ç–æ–∫...")
			thread = threading.Thread(target=self.check)
			thread.start()
			print("–°–æ–∑–¥–∞–ª!")

			print("–ó–∞–ø—É—Å–∫–∞—é –∞–Ω—Ç–∏—Å–æ–Ω...")
			self.antisleep()
			print("–ó–∞–ø—É—Å—Ç–∏–ª!")

			print("–ó–∞–ø—É—Å–∫–∞—é –≤–µ—á–Ω—ã–π –æ–Ω–ª–∞–π–Ω...")
			self.online()
			print("–ó–∞–ø—É—Å—Ç–∏–ª!")

			print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")


		except Exception as ex:
			print("error (__init__):", ex)


	def online(self): #–°–æ–æ–±—â–µ—Å—Ç–≤–æ –≤—Å–µ–≥–¥–∞ –æ–Ω–ª–∞–π–Ω
		try:
			while True:
				self.vk.method("groups.enableOnline", {"group_id": 193390774})
				time.sleep(600)
		except Exception as ex:
			print("error (online):", ex)


	def write_msg(self, user_id, message):
		try:
			self.vk.method('messages.send', {'user_id': user_id, 'message': message, 'keyboard': keyboard, 'random_id': random.randint(0, 100000000)})
		except Exception as ex:
			print("error (write_msg, {0}, {1}):".format(user_id, message), ex)


	def check(self):
		while True:
			try:
				now = datetime.datetime.utcnow() + datetime.timedelta(hours=3)
				if now.isoweekday() not in [7]: # –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –Ω–µ —Å—É–±–±–æ—Ç–∞, –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –ø—Ä–æ–¥–æ–ª–∂–∞–π –∫–æ–¥... not in [6, 7]:
					for mail in mails:
						if now.hour == mail.hours and now.minute == mail.minutes:
							if mail.send:
								mail.send = False
								with connection.cursor() as cursor:
									cursor.execute("SELECT user_id FROM Users")
									for row in cursor:
										self.write_msg(row["user_id"], mail.message)
						else:
							mail.send = True

			except Exception as ex:
				print("error (check):", ex)


	def antisleep(self): #–ß—Ç–æ–±—ã –Ω–µ —É—Å–Ω—É–ª–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ë–î 
		try:
			threading.Timer(600, self.antisleep).start()
			with connection.cursor() as cursor:
				cursor.execute("SELECT * FROM Users")
		except Exception as ex:
			print("error (antisleep):", ex)

	
	def start(self):
		while True:
			try:
				for event in self.longpoll.listen():
					if event.type == VkEventType.MESSAGE_NEW and event.to_me:
						id = event.user_id
						msg = event.text.lower()
						if msg == "–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è":
							with connection.cursor() as cursor:
								cursor.execute("INSERT IGNORE INTO Users (user_id) VALUES (%s)", id)
								if cursor.rowcount == 0:
									self.write_msg(id, "–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!")
								else:
									self.write_msg(id, "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É\n–í–≤–µ–¥–∏—Ç–µ \"–û—Ç–ø–∏—Å–∞—Ç—å—Å—è\" —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É.")
								connection.commit()


						elif msg == "–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è":
							with connection.cursor() as cursor:
								cursor.execute("DELETE FROM Users WHERE user_id = %s", id)
								if cursor.rowcount != 0:
									self.write_msg(id, "–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏")
								else:
									self.write_msg(id, "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞–ª–∏—Å—å")
								connection.commit()


						elif msg == "–∫–æ–º–∞–Ω–¥—ã":
							self.write_msg(id, "‚öô–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:")
							self.write_msg(id, "üîç–î–ª—è –ø–æ–∏—Å–∫–∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏ –≤–≤–µ–¥–∏—Ç–µ: \"–ü–æ–∏—Å–∫ <–≤–∞—à –∑–∞–ø—Ä–æ—Å>\". ")
							self.write_msg(id, "üå¶ –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤–≤–µ–¥–∏—Ç–µ: \"–ü–æ–≥–æ–¥–∞ <–≥–æ—Ä–æ–¥>\". ")
							self.write_msg(id, "üïê–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –ø–∞—Ä—ã –≤–≤–µ–¥–∏—Ç–µ: \"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è\". ")
							connection.commit()


						elif msg.startswith('–ø–æ–∏—Å–∫ '):
							try:
								wikipedia.set_lang("ru")
								find = msg.replace('–ø–æ–∏—Å–∫ ', '')
								self.write_msg(id, "–ò—â—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –≤–∏–∫–∏–ø–µ–¥–∏–∏: " + find.title() + " ...")
								infor = wikipedia.summary(find, sentences=3)
								self.write_msg(id, str(infor))
							except:
								self.write_msg(id, "–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
							
							connection.commit()
						

						elif msg.startswith('–ø–æ–≥–æ–¥–∞ '):
							city = msg.replace('–ø–æ–≥–æ–¥–∞ ', '')
							try:
								self.write_msg(id, "–ò–∑–º–µ—Ä—è—é –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ " + city.title() + "...")
								owm = pyowm.OWM('523f5772a5e781cf832e2150a2b78b02', language = 'ru')
								observation = owm.weather_at_place(city)
								w = observation.get_weather()
								status = w.get_detailed_status()
								temperature = w.get_temperature('celsius')['temp']
								self.write_msg(id, "–í –≥–æ—Ä–æ–¥–µ " + city.title() + " " + str(math.ceil(temperature)) + "¬∞. " + status.title())
							except:
								self.write_msg(id, "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")

							connection.commit()


						elif msg.startswith('rus eng '):
							trns = msg.replace('rus eng ', '')
							self.write_msg(id, "–ü–µ—Ä–µ–≤–æ–∂—É —Ç–µ–∫—Å—Ç —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π...")
							translator= Translator(from_lang="russian",to_lang="english")
							self.write_msg(id, translator.translate(trns))


						elif msg.startswith('eng rus '):
							trns = msg.replace('eng rus', '')
							self.write_msg(id, "–ü–µ—Ä–µ–≤–æ–∂—É —Ç–µ–∫—Å—Ç —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π...")
							translator= Translator(from_lang="english",to_lang="russian")
							self.write_msg(id, translator.translate(trns))

						else:
							self.write_msg(id, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

			except Exception as ex:
				connection.connect_timeout = 10000000000000
				print("error (start):", ex)


	def __del__(self):
		connection.close()


if __name__ == "__main__":
	bot = Bot()
	bot.start()
